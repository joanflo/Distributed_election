
package server;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Server", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Server {


    /**
     * 
     * @param idProceso
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "arrancaProceso", targetNamespace = "http://server/", className = "server.ArrancaProceso")
    @ResponseWrapper(localName = "arrancaProcesoResponse", targetNamespace = "http://server/", className = "server.ArrancaProcesoResponse")
    @Action(input = "http://server/Server/arrancaProcesoRequest", output = "http://server/Server/arrancaProcesoResponse")
    public String arrancaProceso(
        @WebParam(name = "idProceso", targetNamespace = "")
        int idProceso);

    /**
     * 
     * @param idProceso
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "pararProceso", targetNamespace = "http://server/", className = "server.PararProceso")
    @ResponseWrapper(localName = "pararProcesoResponse", targetNamespace = "http://server/", className = "server.PararProcesoResponse")
    @Action(input = "http://server/Server/pararProcesoRequest", output = "http://server/Server/pararProcesoResponse")
    public String pararProceso(
        @WebParam(name = "idProceso", targetNamespace = "")
        int idProceso);

    /**
     * 
     * @param idProceso
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "computar", targetNamespace = "http://server/", className = "server.Computar")
    @ResponseWrapper(localName = "computarResponse", targetNamespace = "http://server/", className = "server.ComputarResponse")
    @Action(input = "http://server/Server/computarRequest", output = "http://server/Server/computarResponse")
    public String computar(
        @WebParam(name = "idProceso", targetNamespace = "")
        int idProceso);

    /**
     * 
     * @param idProceso
     * @param idCandidato
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eleccion", targetNamespace = "http://server/", className = "server.Eleccion")
    @ResponseWrapper(localName = "eleccionResponse", targetNamespace = "http://server/", className = "server.EleccionResponse")
    @Action(input = "http://server/Server/eleccionRequest", output = "http://server/Server/eleccionResponse")
    public String eleccion(
        @WebParam(name = "idProceso", targetNamespace = "")
        int idProceso,
        @WebParam(name = "idCandidato", targetNamespace = "")
        int idCandidato);

}
